package com.demo.serviceimpl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.demo.entity.Company;
import com.demo.exception.CompanyNotFoundException;
import com.demo.repository.CompanyRepository;
import com.demo.service.CompanyService;

@Service
public class CompanyServiceImpl implements CompanyService {

    @Autowired
    private CompanyRepository companyRepository;

    // Add a new company
    @Override
    public Company addCompany(Company company) {
        // Logic to save the company
        return companyRepository.save(company);
    }

    // Retrieve all companies
    @Override
    public List<Company> getAllCompanies() {
        // Logic to retrieve all companies
        return companyRepository.findAll();
    }

    // Retrieve a company by ID
    @Override
    public Company getCompanyById(Long companyId) throws CompanyNotFoundException {
        // Find the company by ID or throw a custom exception if not found
        return companyRepository.findById(companyId)
                .orElseThrow(() -> new CompanyNotFoundException("Company not found with ID: " + companyId));
    }

    /* Update a company's details
    @Override
    public Company updateCompany(Long companyId, Company updatedCompany) throws CompanyNotFoundException {
        Company existingCompany = companyRepository.findById(companyId)
                .orElseThrow(() -> new CompanyNotFoundException("Company not found with ID: " + companyId));

        // Update the details of the company
        existingCompany.setName(updatedCompany.getName());
        existingCompany.setLocation(updatedCompany.getLocation());
        existingCompany.setIndustry(updatedCompany.getIndustry());
        existingCompany.setContact(updatedCompany.getContact());
        // Add any additional fields as required

        // Save the updated company
        return companyRepository.save(existingCompany);
    }

    // Delete a company by ID
    @Override
    public boolean deleteCompany(Long companyId) throws CompanyNotFoundException {
        Company company = companyRepository.findById(companyId)
                .orElseThrow(() -> new CompanyNotFoundException("Company not found with ID: " + companyId));

        // Delete the company
        companyRepository.delete(company);
        return true;
    }*/
}
